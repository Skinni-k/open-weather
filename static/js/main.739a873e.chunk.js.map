{"version":3,"sources":["Components/Header/Header.js","Components/Cards/Cards.js","Components/Search/Search.js","Components/Home/Home.js","Components/Error/Error.js","Components/Chart/Chart.js","Components/Each Day/IndividualDay.js","App.js","index.js","Components/Cards/card.module.css","Components/Search/search.module.css","Components/Each Day/individualDay.module.css","Components/Header/header.module.css","Components/Home/home.module.css","Components/Error/error.module.css"],"names":["Header","className","styles","header","Link","to","exact","IndividualCard","props","place","longitude","latitude","weather","humidity","lowTemp","highTemp","sunrise","sunset","Card","MuiPaperRounded","CardActionArea","CardMedia","media","image","checkWeather","title","CardContent","Typography","cardTitle","gutterBottom","variant","component","Cards","indexValue","cardList","daySunrise","dateSunrise","timeSunrise","daySunset","dateSunset","timeSunset","days","when","style","root1","root2","root3","root4","root5","key","pathname","state","CssTextField","withStyles","root","color","fontSize","fontWeight","border","borderRadius","borderColor","TextField","Search","onValueChange","onSubmitHandler","placeList","onPlaceSelect","StylesProvider","injectFirst","form","onSubmit","Autocomplete","searchBar","freeSolo","options","getOptionLabel","option","display_name","onChange","renderInput","params","label","id","required","submitButton","Home","useState","value","setValue","setPlaceList","dailyData","setDailyData","setLongitude","setLatitude","showCards","setShowCards","firstUpdate","useRef","getCordinates","debounce","axios","get","then","response","data","catch","e","window","alert","useLayoutEffect","current","getWeather","a","daily","epochConvertion","timeframe","ans","Date","parseInt","toString","substring","target","length","lon","lat","display_place","preventDefault","cards","map","card","main","temp","min","max","credit","href","rel","Error","redirect","setRedirect","useEffect","interval","setTimeout","clearTimeout","errorTitle","onClick","Chart","graphData","avgTemp","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","borderWidth","type","yAxis","text","xAxis","categories","lineColor","lineWidth","plotOptions","series","gridLineColor","legend","itemStyle","itemHoverStyle","itemHiddenStyle","name","highcharts","Highcharts","IndividualDay","hourlyData","setHourlyData","currentTime","setCurrentTIme","setPlace","setWeather","setHumidity","setLowTemp","setHighTemp","setSunrise","setSunset","lowTempList","setLowTempList","avgTempList","setAvgTempList","highTempList","setHighTempList","hourlyTime","setHourlyTime","showGraph","setShowGraph","showError","setShowError","setGraphData","location","useLocation","undefined","getWeatherHourly","list","getDate","substr","specificTimeFrame","particularDate","providedDate","filteredTimeSet","filter","x","utcDate","dt_txt","graphDataList","temp_min","temp_max","hour","getHours","individualCard","day","App","path","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.739a873e.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport styles from \"./header.module.css\"\n\nconst Header = () => {\n    return (\n        <div className={styles.header}>\n            <Link className={styles.Link} to=\"/\" exact=\"true\">\n                <h1>Weather Forecast</h1>\n            </Link>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport styles from \"./card.module.css\";\n\nconst Cards = (props) => {\n    const { indexValue, cardList, place, longitude, latitude, weather, humidity, lowTemp, highTemp, sunrise, sunset } = props;\n    const [daySunrise, dateSunrise, timeSunrise] = sunrise;\n    const [daySunset, dateSunset, timeSunset] = sunset;\n    const days = [\n        {when: \"Today.\"},\n        {when: \"Tomorrow\", style: styles.root1},\n        {when: \"overmorrow\", style: styles.root2},\n        {when: \"Two days later\", style: styles.root3},\n        {when: \"Three Days Later\", style: styles.root4},\n        {when: \"Four Days Later\", style: styles.root5}\n    ];\n    return (\n        <div>\n            {cardList ?\n                <Link key={days.indexValue} className={styles.Link} exact=\"true\"\n                    to={{\n                        pathname: `/id=${indexValue}`,\n                        state: {place, longitude, latitude, weather, humidity, lowTemp, highTemp, sunrise, sunset }\n                        }}>\n                    <div className={days[indexValue].style}>\n                        <IndividualCard \n                        place={place}\n                        longitude={longitude}\n                        latitude={latitude}\n                        weather={weather}\n                        humidity={humidity}\n                        lowTemp={lowTemp}\n                        highTemp={highTemp}\n                        sunrise={`${daySunrise} ${dateSunrise} ${timeSunrise} `}\n                        sunset={`${daySunset} ${dateSunset} ${timeSunset} `}\n                        />\n                    </div>\n                </Link> :\n                <IndividualCard \n                place={place}\n                longitude={longitude}\n                latitude={latitude}\n                weather={weather}\n                humidity={humidity}\n                lowTemp={lowTemp}\n                highTemp={highTemp}\n                sunrise={`${daySunrise} ${dateSunrise} ${timeSunrise} `}\n                sunset={`${daySunset} ${dateSunset} ${timeSunset} `}\n                />\n                }\n        </div>\n    )\n}\n\nconst IndividualCard = ( props ) => {\n    const { place, longitude, latitude, weather, humidity, lowTemp, highTemp, sunrise, sunset } = props;\n    \n    const checkWeather = (weather) => {\n        const Rainy = \"https://www.theharlemvalleynews.net/wp-content/uploads/2015/03/rain_showers.png\"\n        const Snow = \"https://freesvg.org/img/sivvus_weather_symbols_5.png\"\n        const Clear = \"https://png.vector.me/files/images/1/6/166202/symbols_weather_clear_sunny.jpg\"\n        const Clouds = \"https://www.clipartkey.com/mpngs/m/19-197515_showing-post-media-for-cool-and-cloudy-weather.png\"\n        if(weather === \"Rain\"){\n            return Rainy\n        }else if(weather === \"Snow\"){\n            return Snow\n        }else if(weather === \"Clear\"){\n            return Clear\n        }else if(weather === \"Clouds\"){\n            return Clouds\n        }\n    }\n    \n    return (\n            <Card className={` ${styles.MuiPaperRounded} `}>\n                <CardActionArea>\n                    <CardMedia\n                    className={styles.media}\n                    image={checkWeather(weather)}\n                    title=\"Weather\"\n                    />\n                    <CardContent>\n                        <Typography className={styles.cardTitle} gutterBottom variant=\"h5\" component=\"h3\">\n                            {place} - {longitude}, {latitude}\n                        </Typography>\n                        <Typography component=\"p\">\n                            Humidity - {humidity}°C\n                        </Typography>\n                        <Typography component=\"p\">\n                            Low Temp. - {lowTemp}°C\n                        </Typography>\n                        <Typography component=\"p\">\n                            High Temp. - {highTemp}°C\n                        </Typography>\n                        <Typography component=\"p\">\n                            Sunrise - {sunrise}\n                        </Typography>\n                        <Typography component=\"p\">\n                            Sunset - {sunset}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n    )\n}\n\n\nexport default Cards;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Autocomplete } from '@material-ui/lab';\nimport styles from \"./search.module.css\"\nimport { StylesProvider } from '@material-ui/core';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst CssTextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      color: \"#000\",\n      fontSize: \"20px\",\n      fontWeight: \"bold\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n          border: \"3px solid #000\",\n          borderRadius: \"10px\",\n      },\n      \"&.Mui-focused fieldset\": {\n          border: \"3px solid #FFF\",\n        borderColor: \"white\"\n      }\n    }\n  }\n})(TextField);\n\nconst Search = (props) => {\n    const { onValueChange, onSubmitHandler, placeList, onPlaceSelect } = props;\n\n    return (\n        <StylesProvider injectFirst>\n        <div>\n            <form className={styles.form} onSubmit={onSubmitHandler}>\n                <Autocomplete className={styles.searchBar} freeSolo\n                options={placeList}\n                getOptionLabel={(option) => option.display_name}\n                onChange={onPlaceSelect} \n                renderInput={params => (\n                    <CssTextField\n                    {...params}\n                    onChange={onValueChange} \n                    label=\"Enter Location\" variant=\"outlined\" id=\"custom-css-outlined-input\" required\n                    />\n                )}\n                />\n                <button className={styles.submitButton}>SEARCH</button>\n            </form>\n            <div>\n            </div>\n        </div>\n        </StylesProvider>\n    )\n}\n\nexport default Search;\n","import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./home.module.css\";\nimport Cards from \"../Cards/Cards\";\nimport Search from \"../Search/Search\";\nimport { debounce } from \"lodash\";\n\nconst Home = () => {\n  const [value, setValue] = useState(\"\");\n  const [placeList, setPlaceList] = useState([]);\n  const [dailyData, setDailyData] = useState([]);\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [showCards, setShowCards] = useState(false);\n  const firstUpdate = useRef(true);\n  const api_key_cordi = \"b600f7b8e65061&q\";\n  const api_key_weather = \"0c696ec6fa2c35f0d62d8c3423ffdf67\";\n  const numberOfCards = [1, 2, 3, 4, 5];\n  const suffix = \"000\";\n\n  //// FUNTION TO call getCordinates only when length is above 3 THE PLACE VALUE\n  const onValueChange = (e) => {\n    if (e.target.value.length > 3) {\n      getCordinates(e.target.value);\n    }\n  };\n\n  // TO GET CORDINATES USING THE INPUT VALUE\n  const getCordinates = debounce((place) => {\n    axios\n      .get(\n        `https://api.locationiq.com/v1/autocomplete.php?key=${api_key_cordi}&q=${place}`\n      )\n      .then((response) => {\n        setPlaceList(response.data);\n      })\n      .catch((e) => {\n        window.alert(\"ENTER CORRECT LOCATION\");\n      });\n  }, 400);\n\n  // WHEN PLACE IS SELETECTED, SET STATE AND CALL WEATHER API\n  const onPlaceSelect = (e, value) => {\n    if (value !== null) {\n      setLongitude(value.lon);\n      setLatitude(value.lat);\n      setValue(value.display_place);\n    } else {\n      setShowCards(false);\n    }\n  };\n\n  // USELAYOUTEFFECT FOR NOT MAKING IT RUN ON RENDER BUT ONLY WHEN LONGITUDE AND LATITUDE IS SET, AND THEN CALL getWeather\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    getWeather();\n  }, [longitude && latitude]);\n\n  // GETTING WEATHER DATA USING THE LONGITUDE AND LATITUDE GOTTEN FROM PREVIOUS RESPONSE\n  const getWeather = async () => {\n    axios\n      .get(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&units=metric&appid=${api_key_weather}`\n      )\n      .then((response) => {\n        setDailyData(response.data.daily);\n      });\n  };\n\n  // FUNCTION TO RUN ON SUBMIT\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    if (longitude.length > 0 && longitude.length > 0) {\n      setShowCards(true);\n    } else {\n      window.alert(\"Please Select location from dropdown\");\n    }\n  };\n\n  // THE DATE AND TIME FORMAT GOTTEN IN RESPONSE IS IN EPOCH TIME, SO BELOW TWO FUNCTIONS CONVERT IT\n  const epochConvertion = (timeframe) => {\n    const epochDate = timeframe;\n    const currentEpochDateTime = epochDate + suffix;\n    const ans = new Date(parseInt(currentEpochDateTime));\n    const day = ans.toString().substring(0, 3);\n    const date = ans.toString().substring(4, 15);\n    const time = ans.toString().substring(16, 24);\n    const values = [day, date, time];\n    return values;\n  };\n\n  return (\n    <div>\n      <Search\n        onValueChange={onValueChange}\n        placeList={placeList}\n        onPlaceSelect={onPlaceSelect}\n        onSubmitHandler={onSubmitHandler}\n      />\n      <div className={styles.cards}>\n        {showCards ? (\n          numberOfCards.map((card) => {\n            return (\n              <Cards\n                key={card}\n                indexValue={card}\n                cardList={true}\n                place={value?.toString()}\n                longitude={longitude?.toString()}\n                latitude={latitude?.toString()}\n                weather={dailyData[card]?.weather[0]?.main?.toString()}\n                humidity={dailyData[card]?.humidity?.toString()}\n                lowTemp={dailyData[card]?.temp?.min?.toString()}\n                highTemp={dailyData[card]?.temp?.max?.toString()}\n                sunrise={epochConvertion(dailyData[card]?.sunrise)}\n                sunset={epochConvertion(dailyData[card]?.sunset)}\n              />\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className={styles.credit}>\n        {\" \"}\n        <p>\n          {\" \"}\n          Made By{\" \"}\n          <a\n            href=\"https://www.linkedin.com/in/kevin-dewinter/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {\" \"}\n            Kevin Dewinter{\" \"}\n          </a>{\" \"}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport styles from \"./error.module.css\"\nimport { Link, Redirect } from \"react-router-dom\";\n\nconst Error = () => {\n\n    const [redirect, setRedirect] = useState(false);\n\n    useEffect(() => {\n        const interval = setTimeout(() => {\n            setRedirect(true);\n          }, 5000);\n        return () => clearTimeout(interval);\n    }, []);\n\n    const handleLeak = () => {\n        setRedirect(true);\n    }\n\n    return (\n        <>\n        {redirect ?\n        <Redirect to=\"/\" />:\n        <div>\n           <h1 className={styles.errorTitle}>404: Page Not Found</h1> \n           <Link className={styles.Link} exact=\"true\" onClick={handleLeak} to=\"/\"> Click Here to Go back to Homepage</Link>\n        </div> }\n        </>\n    )\n}\n\nexport default Error","import React from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\n\nconst Chart = (props) => {\n    const [lowTemp, avgTemp, highTemp, hourlyTime] = props.graphData;\n\n    const options = {\n        colors: ['#aaeeee','#82D071', '#F45B5B'],\n        chart: {\n            backgroundColor: {\n                linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n                stops: [\n                    [0, '#2a2a2b'],\n                    [1, '#3e3e40']\n                ]\n            },\n            borderColor: 'salmon',\n            borderRadius: 20,\n            borderWidth: 2,\n            type: 'line'\n        },\n        yAxis: {\n            title: {\n                text: 'Temperature',\n                style: {\n                    color: '#FFF'\n                }\n            }\n        },\n        xAxis: {\n            categories: hourlyTime,      \n            lineColor: '#FFF',\n            lineWidth: 1,\n            plotOptions: {\n                series: {\n                    colors: [ '#0F5474','#82D071', '#F45B5B']\n                }\n            },\n            gridLineColor: '#000',\n            title: {\n                text: 'Time',\n                style: {\n                    color: '#FFF'\n                }\n            }\n        },\n        legend: {\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            itemStyle: {\n                color: '#FFFFFF'\n            },\n            itemHoverStyle: {\n                color: '#E0E0E3'\n            },\n            itemHiddenStyle: {\n                color: '#606063'\n            },\n            title: {\n                text: 'LEGEND',\n                style: {\n                    color: 'pink',\n                }\n            }\n        },\n        series: [{\n            name: 'Low Temperature',\n            data: lowTemp\n        },{\n            name: 'Avg. Temperature',\n            data: avgTemp\n        }, {\n            name: 'High Temperature',\n            data: highTemp\n        }],\n      }\n\n    return (\n            <HighchartsReact\n            highcharts={Highcharts}\n            options={options}\n            />\n    )\n}\n\nexport default Chart","import React, { useEffect, useState } from 'react';\nimport styles from \"./individualDay.module.css\";\nimport Error from \"../Error/Error\";\nimport Cards from '../Cards/Cards';\nimport axios from \"axios\";\nimport Chart from '../Chart/Chart';\nimport { useLocation } from \"react-router\";\n\nconst IndividualDay = () => {\n    const [hourlyData, setHourlyData] = useState([]);\n    const [currentTime, setCurrentTIme] = useState([])\n    const [place, setPlace] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    const [latitude, setLatitude] = useState(\"\");\n    const [weather, setWeather] = useState(\"\");\n    const [humidity, setHumidity] = useState(\"\");\n    const [lowTemp, setLowTemp] = useState(\"\");\n    const [highTemp, setHighTemp] = useState(\"\");\n    const [sunrise, setSunrise] = useState([]);\n    const [sunset, setSunset] = useState([]);\n    const [lowTempList, setLowTempList] = useState([]);\n    const [avgTempList, setAvgTempList] = useState([]);\n    const [highTempList, setHighTempList] = useState([]);\n    const [hourlyTime, setHourlyTime] = useState([]);\n    const [showGraph, setShowGraph] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const [graphData, setGraphData] = useState({});\n    const location = useLocation();\n    const api_key_weather = \"0c696ec6fa2c35f0d62d8c3423ffdf67\";\n\n\n    // THIS useEffect RUNS ON RENDER TO SET THE STATES PASSED FROM THE CARD\n    useEffect(()=>{\n        if(location.state !== undefined){\n            setPlace(location.state.place);\n            setLongitude(location.state.longitude);\n            setLatitude(location.state.latitude);\n            setWeather(location.state.weather);\n            setHumidity(location.state.humidity);\n            setLowTemp(location.state.lowTemp);\n            setHighTemp(location.state.highTemp);\n            setSunrise(location.state.sunrise);\n            setSunset(location.state.sunset);\n        }else{\n            setShowError(true)\n        }\n    },[]);\n\n    // THE BELOW FUNCTION SHOULD ONLY RUN WHEN latitude HAS BEEN SET A VALUE, THAT IS WHY THE IF BLOCK\n    // AFTER THAT getWeatherHourly FUNCTION IS CALLED TO GET HOURLY DATA\n    useEffect(() => {\n        if(latitude.length > 0){\n            getWeatherHourly();\n        }\n    },[latitude]);\n\n    // THE BELOW FUNCTION GETS WEATHER DATA FOR NEXT 5 DAYS\n    const getWeatherHourly = () => {\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${api_key_weather}`)\n        .then((response) => {\n                setHourlyData(response.data.list);\n        });\n    }\n\n    // THE BELOW FUNCTION SHOULD ONLY RUN WHEN HOURLYDATA AND SUNRISE HAS BEEN SET A VALUE\n    // AFTER HOURLY DATA HAS BEEN SET, specificTimeFrame FUNCTION IS CALLED TO GET DATA FOR A SPECIFIC DATE\n    useEffect(() => {\n        if(hourlyData.length > 0 && sunrise.length > 0){\n        const dayDate = sunrise[1];\n        const getDate = dayDate.substr(4,2)\n        specificTimeFrame(getDate);\n        }\n    },[hourlyData]);\n\n    // THE BELOW FUNCTION FILTERS OUT THE DATA FOR THE REQUIRED DATE AND CONVERTS IT IN LOCAL TIME\n    const specificTimeFrame = (particularDate) => {\n        const providedDate = particularDate\n        const filteredTimeSet = hourlyData.filter((x)=>{\n            const utcDate = `${x.dt_txt} UTC`;\n            const currentDate = new Date (utcDate);\n            const date = currentDate.getDate()\n            return date == providedDate\n        })\n        setCurrentTIme(filteredTimeSet)\n    };\n\n    // THE BELOW FUNCTION SHOULD ONLY RUN WHEN currentTime HAS BEEN SET A VALUE\n    // AFTER currentTime HAS BEEN SET, graphDataList FUNCTION IS CALLED TO GET ARRAY OF TEMPRATURES\n    useEffect(()=>{\n        if(currentTime.length>0){\n            graphDataList();\n        }\n    },[currentTime])\n\n    // THE BELOW FUNCTION RUNS TO GET THE LOW, AVERAGE AND HIGH TEMPRATURES FROM THE CURENT TIME\n    const graphDataList = () => {\n        const lowTempList = currentTime.map((lowTemp)=>{\n            return lowTemp.main.temp_min\n        })\n        const avgTempList = currentTime.map((avgTemp)=>{\n            return avgTemp.main.temp\n        })\n        const highTempList = currentTime.map((highTemp)=>{\n            return highTemp.main.temp_max\n        })\n        const hourlyTime = currentTime.map((hour)=>{\n            const utcDate = `${hour.dt_txt} UTC`;\n            const currentDate = new Date (utcDate);\n            const individualHour = currentDate.getHours()\n            return individualHour\n        })\n        setHourlyTime(hourlyTime);\n        setLowTempList(lowTempList);\n        setAvgTempList(avgTempList);\n        setHighTempList(highTempList);\n    }\n\n    // THE BELOW USEEFFECT SETS THE GRAPH DATA ONLY WHEN ALL THE TEMPRATURES HAVE BEEN SET\n    useEffect(()=>{\n        if(lowTempList.length > 0 && avgTempList.length > 0 && highTempList.length > 0 && hourlyTime.length > 0){\n            setGraphData([lowTempList, avgTempList, highTempList, hourlyTime]);\n            setShowGraph(true);\n        }\n    },[highTempList])\n\n    return (\n        <>\n            { showError ?\n                <Error /> : \n                <>\n                    {weather.length > 0 ? \n                        <div className={styles.individualCard}>\n                            <p className={styles.day}>{`${sunrise[0]} - ${sunrise[1]}`}</p>\n                            <Cards\n                            cardList={false}\n                            place={place}\n                            longitude={longitude}\n                            latitude={latitude}\n                            weather={weather}\n                            humidity={humidity}\n                            lowTemp={lowTemp}\n                            highTemp={highTemp}\n                            sunrise={sunrise}\n                            sunset={sunset}\n                            />\n                        </div>:\n                        <></>\n                    }\n                    {showGraph && graphData.length > 0 ? \n                        <div className={styles.chart}>\n                            <Chart graphData={graphData}/>\n                        </div>:\n                        <></>\n                    }\n                </>\n            }\n        </>\n    )\n}\n\nexport default IndividualDay;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './Components/Header/Header';\nimport Home from './Components/Home/Home';\nimport IndividualDay from './Components/Each Day/IndividualDay';\nimport Error from \"./Components/Error/Error\";\n\nfunction App() {\n  return (\n       <Router>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/id=:id\" exact component={IndividualDay} />\n          <Route component={Error} />\n          </Switch>\n        </div>\n       </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"media\":\"card_media__1tsul\",\"MuiPaperRounded\":\"card_MuiPaperRounded__EJUVq\",\"Link\":\"card_Link__G1tTK\",\"cardTitle\":\"card_cardTitle__1bBMb\",\"root1\":\"card_root1__XEgei\",\"root2\":\"card_root2__2vxum\",\"root3\":\"card_root3__3SxR1\",\"root4\":\"card_root4__372mF\",\"root5\":\"card_root5__22y1F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"search_form__319NM\",\"searchBar\":\"search_searchBar__3GAgf\",\"submitButton\":\"search_submitButton__wZlpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"individualCard\":\"individualDay_individualCard__38Bq-\",\"day\":\"individualDay_day__2Cgy-\",\"chart\":\"individualDay_chart__qev0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__jZoER\",\"Link\":\"header_Link__1i9qg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"home_cards__1hIpn\",\"hidden\":\"home_hidden__b1W_b\",\"wait\":\"home_wait__125d6\",\"credit\":\"home_credit__224R9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"error_Link__3W0hx\",\"errorTitle\":\"error_errorTitle__1IYKE\"};"],"sourceRoot":""}